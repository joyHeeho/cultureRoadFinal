<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.culture.user.login.dao.UserLoginDAO">

	<select id="userLogin" parameterType="userLogin" resultType="userLogin">
      SELECT   user_no userNo, user_id userId, user_pw userPw, user_name userName, user_email userEmail, 
       user_phone userPhone, TO_CHAR(TO_DATE(user_birth, 'YYMMDD'), 'YY"년" MM"월" DD"일"') AS userBirth, user_date userDate, user_delete userDelete
      FROM   USERS
      WHERE user_id = #{userId} and user_pw = #{userPw}
	</select>

	<insert id="signUp" parameterType="userLogin">
    <!-- 회원가입 -->
    INSERT INTO USERS(user_no, user_name, user_id, user_pw, user_email, user_phone, user_birth)
    VALUES (users_seq.nextval, #{userName}, #{userId}, #{userPw}, #{userEmail}, #{userPhone}, #{userBirth})
	</insert>
	
	<select id="idChk" parameterType="userLogin" resultType="int">
		/* 아이디중복확인 */
		SELECT count(*)
		FROM USERS
		WHERE user_id=#{userId}
	</select>
	
	<select id="pwChk" parameterType="userLogin" resultType="int">
		/* 비밀번호 확인 */
		SELECT count(*)
		FROM USERS
		WHERE user_id=#{userId} and user_pw=#{userPw}
	</select>
	
	<select id="myPage" parameterType="userLogin" resultType="userLogin">
		SELECT   user_no userNo, user_id userId, user_pw userPw, user_name userName, user_email userEmail, 
		user_phone userPhone, TO_CHAR(TO_DATE(user_birth, 'YYMMDD'), 'YY"년" MM"월" DD"일"') AS userBirth
		FROM   USERS
		WHERE user_id=#{userId} 
	</select>
	
	<update id="updateMyPage" parameterType="userLogin">
      /*정보 수정 */
      UPDATE USERS  
      <set>
         user_id = #{userId}
         <if test="userPw != ''"> , user_pw = #{userPw}</if>
         <if test="userEmail != ''"> , user_email = #{userEmail}</if>
         <if test="userPhone != ''"> , user_phone = #{userPhone}</if>
        
      </set>
      WHERE user_id=#{userId}
   </update>

	<update id="deleteAccount" parameterType="userLogin">
	/* 회원 탈퇴 */
		UPDATE USERS
		SET user_delete = 1
		WHERE user_id=#{userId} and user_pw=#{userPw}
	</update>
	
	<!-- 
	<delete id="deleteAccount" parameterType="user" >
		/* 회원 탈퇴 */
		DELETE FROM USERS
		WHERE user_id=#{userId} and user_pw=#{userPw}
	</delete>
	 -->
	 
	 <!-- 사용자가 입력한 정보가 기존의 정보와 같은지 확인(이메일로 아이디) -->
 	<select id="personalInfoEmail" parameterType = "userLogin" resultType="int">
 		SELECT count(*)
 		FROM USERS
 		WHERE user_name = #{userName} and user_birth = #{userBirth} and user_email = #{userEmail}
 	</select>
	
	<!-- 사용자에게 id, 이름, 가입일 알려주기 -->
	<select id="findId" parameterType = "userLogin" resultType="userLogin">
		SELECT user_name userName, user_id userId, TO_CHAR(TO_DATE(user_birth, 'YYMMDD'), 'YY"년" MM"월" DD"일"') AS userBirth
 		FROM USERS
 		WHERE user_name = #{userName} and user_birth = #{userBirth} and user_email = #{userEmail}
	</select>
	
	 <!-- 사용자가 입력한 정보가 기존의 정보와 같은지 확인 -->
 	<select id="personalPwInfoEmail" parameterType = "userLogin" resultType="int">
 		SELECT count(*)
 		FROM USERS
 		WHERE user_id = #{userId} and user_birth = #{userBirth} and user_email = #{userEmail}
 	</select>
	
	<update id="updatePw" parameterType="userLogin">
		UPDATE USERS
		SET user_pw = #{userPw}
		WHERE user_id = #{userId}
	</update>
	
	<!-- 사용자가 입력한 정보가 기존의 정보와 같은지 확인 (전화번호로 아이디)-->
	<select id="personalInfoPhone" parameterType="userLogin" resultType="int">
		SELECT count(*)
		FROM USERS
		WHERE user_name = #{userName} and user_birth = #{userBirth} and user_phone = #{userPhone}
	</select>
	
	<select id="findIdPhone" parameterType="userLogin" resultType="userLogin">
		SELECT user_name userName, user_id userId, to_char(user_date,'YYYY-MM-DD') userDate
 		FROM USERS
 		WHERE user_name = #{userName} and user_birth = #{userBirth} and user_phone = #{userPhone}
	</select>
	
	<select id="personalPwInfoPhone" parameterType="userLogin" resultType="int">
		SELECT count(*)
		FROM USERS
		WHERE user_id = #{userId} and user_birth = #{userBirth} and user_phone = #{userPhone}
	</select>
	
<!-- 	<select id="myOrderList" parameterType="userLogin" resultType="userLogin">
		SELECT u.user_no userNo, u.user_id userId, m.mv_code, m.mv_pay_status, m.mv_order_date, m.mv_headcnt,
		m.mv_date, m.price  
		FROM USERS U INNER JOIN MVPAYMENTS M
		WHERE u.user_no = m.user_no
	</select> -->
	
<<<<<<< HEAD
	<sql id="userSearch">
	    <if test="search=='userId'">
	        <![CDATA[ user_id LIKE '%'||#{keyword} || '%' ]]>
	    </if>
	    <if test="search=='userName'">
	        <![CDATA[ user_name LIKE '%'||#{keyword} || '%' ]]>
	    </if>
	    <if test="search=='userDelete'">
	        <![CDATA[
	            (
	                (user_delete = 0 AND '회원' LIKE '%'||#{keyword}||'%') OR
	                (user_delete = 1 AND '탈퇴' LIKE '%'||#{keyword}||'%') OR
	                (user_delete = 0 AND #{keyword} = '회원') OR
	                (user_delete = 1 AND #{keyword} = '탈퇴')
	            )
	        ]]>
	    </if>
	</sql>
	
	<select id="userCnt" parameterType="userLogin" resultType="int">
		SELECT COUNT(*)
		FROM USERS
		<trim prefix="where(" suffix=")">
         <include refid="userSearch"></include>
      	</trim>
=======
	<select id="userList" parameterType="userLogin" resultType="userLogin">
		SELECT   user_no userNo, user_id userId, user_pw userPw, user_name userName, user_email userEmail, 
       user_phone userPhone, TO_CHAR(TO_DATE(user_birth, 'YYMMDD'), 'YY"년" MM"월" DD"일"') AS userBirth, 
       user_date userDate, user_delete userDelete,  CASE WHEN user_delete = 0 THEN '회원' WHEN user_delete = 1 THEN '탈퇴' END AS userStatus
		FROM   USERS
>>>>>>> refs/remotes/origin/feature/login
	</select>
<<<<<<< HEAD
		   <!-- 게시판 리스트 기본 조회 -->
      <!-- if문이 만족했을때만 where절 사용. -->
   <select id="userList" resultType="userLogin" parameterType="userLogin">
      <![CDATA[
       SELECT   user_no userNo, REGEXP_REPLACE(user_id, '.', '*', 4)  userId, REGEXP_REPLACE(user_name, '.', '*', 2) userName, CONCAT('****', SUBSTR(user_email, 4, LENGTH(user_email))) userEmail, 
       REGEXP_REPLACE(user_phone, '(\d{3})(\d{3,4})(\d{4})', '\1****\3') userPhone, TO_CHAR(TO_DATE(user_birth, 'YYMMDD'), 'YY"년" MM"월" DD"일"') AS userBirth, 
       TO_CHAR(user_date, 'YYYY"년" MM"월" DD"일"') AS userDate, user_delete userDelete,  CASE WHEN user_delete = 0 THEN '회원' WHEN user_delete = 1 THEN '탈퇴' END AS userStatus
	   FROM  (
           select /*+ index_desc(users users_pk)*/
               rownum as rnum, user_no, user_id, user_name, user_email, user_phone, user_birth, user_date, user_delete
           from users
        where]]>
        <trim prefix="(" suffix=") and" prefixOverrides="and">
         <include refid="userSearch"></include>
      </trim>
      <![CDATA[ rownum <= #{pageNum} * #{amount}
         )userList
      WHERE rnum>(#{pageNum}-1)*#{amount}
      ]]>
   </select>
   
   <update id="userStatusUpdate" parameterType="userLogin">
   		UPDATE USERS
   		SET user_delete = #{userDelete}
   		WHERE user_no = #{userNo} 
   	</update>
=======
	
		<!-- sql이라고 하는 엘리먼트는 공통으로 쓰는 구문입니다~ 라는 뜻! -->
	<sql id="userSearch">
		<if test="search=='userId'">
			<![CDATA[ user_id LIKE '%'||#{keyword} || '%' ]]>
		</if>
		<if test="search=='userName'">
			<![CDATA[ user_name LIKE '%'||#{keyword} || '%' ]]>
		</if>
		<if test="search=='userState'">
			<![CDATA[ user_state LIKE '%'||#{keyword} || '%' ]]>
		</if>	
	</sql>
	
	<select id="userCnt" parameterType="userLogin" resultType="int">
		SELECT COUNT(*)
		FROM USERS
		<trim prefix="where(" suffix=")">
         <include refid="userSearch"></include>
      	</trim>
	</select>
		   <!-- 게시판 리스트 기본 조회 -->
      <!-- if문이 만족했을때만 where절 사용. -->
   <select id="userInfo" resultType="userLogin" parameterType="userLogin">
      <![CDATA[
       SELECT   user_no userNo, user_id userId, user_name userName, user_email userEmail, 
       user_phone userPhone, TO_CHAR(TO_DATE(user_birth, 'YYMMDD'), 'YY"년" MM"월" DD"일"') AS userBirth, 
       user_date userDate, user_delete userDelete,  CASE WHEN user_delete = 0 THEN '회원' WHEN user_delete = 1 THEN '탈퇴' END AS userStatus
	   FROM  (
           select /*+ index_desc(users users_pk)*/
               rownum as rnum, user_no, user_id, user_name, user_email, user_phone, user_birth, user_date, user_delete
           from users
        where]]>
        <trim prefix="(" suffix=") and" prefixOverrides="and">
         <include refid="userSearch"></include>
      </trim>
      <![CDATA[ rownum <= #{pageNum} * #{amount}
         )userList
      WHERE rnum>(#{pageNum}-1)*#{amount}
      ]]>
   </select>
	
	<!-- <select id="userInfo" parameterType="userLogin" resultType="userLogin">
		SELECT   user_no userNo, user_id userId, user_pw userPw, user_name userName, user_email userEmail, 
       user_phone userPhone, TO_CHAR(TO_DATE(user_birth, 'YYMMDD'), 'YY"년" MM"월" DD"일"') AS userBirth, 
       user_date userDate, user_delete userDelete,  CASE WHEN user_delete = 0 THEN '회원' WHEN user_delete = 1 THEN '탈퇴' END AS userStatus
		FROM   USERS
		
		WHERE 	
	</select> -->
>>>>>>> refs/remotes/origin/feature/login

</mapper>